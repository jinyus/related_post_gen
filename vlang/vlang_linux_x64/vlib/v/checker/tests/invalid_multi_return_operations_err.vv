fn foo() (int, int) {
	return 1, 2
}

println(foo() + foo())
println(foo() - foo())
println(foo() * foo())
println(foo() / foo())
println(foo() % foo())
println(foo() ^ foo())
println(foo() << foo())
println(foo() >> foo())
println(foo() == foo())
println(foo() != foo())
println(foo() > foo())
println(foo() < foo())
println(foo() >= foo())
println(foo() <= foo())
println(foo() && foo())
println(foo() || foo())
println(foo() in foo())
println(foo() !in foo())
println(foo() <- foo())

for _ in foo() .. foo() {
}
