vlib/v/checker/tests/option_fn_err.vv:34:16: error: cannot use `?int` as `int`, it must be unwrapped first in argument 1 to `twice`
   32 |     foo()
   33 |     _ := bar(0)
   34 |     println(twice(bar(0)))
      |                   ~~~~~~
   35 | 
   36 |     // anon fn
vlib/v/checker/tests/option_fn_err.vv:37:16: error: cannot use `?int` as `int`, it must be unwrapped first in argument 1 to `anon`
   35 | 
   36 |     // anon fn
   37 |     fn (_ int) {}(bar(0))
      |                   ~~~~~~
   38 | 
   39 |     // assert
vlib/v/checker/tests/option_fn_err.vv:40:9: error: assert can be used only with `bool` expressions, but found `bool` instead
   38 | 
   39 |     // assert
   40 |     assert bar(true)
      |            ~~~~~~~~~
   41 | 
   42 |     // struct
vlib/v/checker/tests/option_fn_err.vv:45:3: error: cannot assign an Option value to a non-option struct field
   43 |     mut v := Data{
   44 |         f: fn (_ int) {}
   45 |         value: bar(0)
      |         ~~~~~~~~~~~~~
   46 |         opt: bar(0)
   47 |     }
vlib/v/checker/tests/option_fn_err.vv:48:8: error: cannot use `?int` as `int`, it must be unwrapped first in argument 1 to `Data.add`
   46 |         opt: bar(0)
   47 |     }
   48 |     v.add(bar(0)) // call method
      |           ~~~~~~
   49 |     v.f(bar(0)) // call fn field
   50 |
vlib/v/checker/tests/option_fn_err.vv:49:6: error: cannot use `?int` as `int`, it must be unwrapped first in argument 1 to `Data.f`
   47 |     }
   48 |     v.add(bar(0)) // call method
   49 |     v.f(bar(0)) // call fn field
      |         ~~~~~~
   50 | 
   51 |     // array
vlib/v/checker/tests/option_fn_err.vv:56:27: error: cannot use unwrapped Option as initializer
   54 |     // init
   55 |     _ := [bar(0)]
   56 |     _ := []int{len: 1, init: bar(0)}
      |                              ~~~~~~
   57 |     _ := [bar(0)]!
   58 |     _ := [1]int{init: bar(0)}
vlib/v/checker/tests/option_fn_err.vv:60:13: error: cannot use Option or Result as index (array type `[]int`)
   58 |     _ := [1]int{init: bar(0)}
   59 |     // index
   60 |     println(arr[bar(0)])
      |                ~~~~~~~~
   61 |     // array builtin methods
   62 |     arr.insert(0, bar(0))
vlib/v/checker/tests/option_fn_err.vv:62:16: error: cannot use `?int` as `voidptr`, it must be unwrapped first in argument 2 to `[]int.insert`
   60 |     println(arr[bar(0)])
   61 |     // array builtin methods
   62 |     arr.insert(0, bar(0))
      |                   ~~~~~~
   63 |     arr.prepend(bar(0))
   64 |     arr.contains(bar(0))
vlib/v/checker/tests/option_fn_err.vv:63:14: error: cannot use `?int` as `voidptr`, it must be unwrapped first in argument 1 to `[]int.prepend`
   61 |     // array builtin methods
   62 |     arr.insert(0, bar(0))
   63 |     arr.prepend(bar(0))
      |                 ~~~~~~
   64 |     arr.contains(bar(0))
   65 |     arr.index(bar(0))
vlib/v/checker/tests/option_fn_err.vv:64:15: error: cannot use `?int` as `int`, it must be unwrapped first in argument 1 to `.contains()`
   62 |     arr.insert(0, bar(0))
   63 |     arr.prepend(bar(0))
   64 |     arr.contains(bar(0))
      |                  ~~~~~~
   65 |     arr.index(bar(0))
   66 |     println(arr.map(bar(0)))
vlib/v/checker/tests/option_fn_err.vv:65:12: error: cannot use `?int` as `int`, it must be unwrapped first in argument 1 to `.index()`
   63 |     arr.prepend(bar(0))
   64 |     arr.contains(bar(0))
   65 |     arr.index(bar(0))
      |               ~~~~~~
   66 |     println(arr.map(bar(0)))
   67 |     println(arr.filter(bar(true)))
vlib/v/checker/tests/option_fn_err.vv:67:21: error: type mismatch, `bar` must return a bool
   65 |     arr.index(bar(0))
   66 |     println(arr.map(bar(0)))
   67 |     println(arr.filter(bar(true)))
      |                        ~~~~~~~~~
   68 |     println(arr.any(bar(true)))
   69 |     println(arr.all(bar(true)))
vlib/v/checker/tests/option_fn_err.vv:68:18: error: type mismatch, `bar` must return a bool
   66 |     println(arr.map(bar(0)))
   67 |     println(arr.filter(bar(true)))
   68 |     println(arr.any(bar(true)))
      |                     ~~~~~~~~~
   69 |     println(arr.all(bar(true)))
   70 |
vlib/v/checker/tests/option_fn_err.vv:69:18: error: type mismatch, `bar` must return a bool
   67 |     println(arr.filter(bar(true)))
   68 |     println(arr.any(bar(true)))
   69 |     println(arr.all(bar(true)))
      |                     ~~~~~~~~~
   70 | 
   71 |     match bar(0) {
